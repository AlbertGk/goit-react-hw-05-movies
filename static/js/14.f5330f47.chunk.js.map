{"version":3,"file":"static/js/14.f5330f47.chunk.js","mappings":"oLAEaA,E,MAAiBC,GAAAA,OAAa,CACzCC,QAAS,mC,6JCFX,EAAuC,+CAAvC,EAAgH,kDAAhH,EAA8K,oC,SC+F9K,EA1FyB,WACvB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAcG,GAAd,WACA,GAAwCH,EAAAA,EAAAA,UAAS,IAAjD,eAAOI,EAAP,KAAqBC,EAArB,KACA,GAAsCL,EAAAA,EAAAA,UAAS,IAA/C,eAAOM,EAAP,KAAoBC,EAApB,KACA,GAAkCP,EAAAA,EAAAA,UAAS,IAA3C,eAAOQ,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEJE,GAAWC,EAAAA,EAAAA,MAETC,EAAuB,mCAAG,2FAC9BZ,GAAa,GADiB,kBAILL,EAAAA,EAAAA,IAAA,gBACZa,EADY,6DAJK,OAItBK,EAJsB,OAO5BC,QAAQC,IAAIF,GACZV,EAAgBU,EAASG,MACzBX,EAAeQ,EAASG,KAAKC,QAC7BV,GAAa,WACX,IAAIW,KAAKL,EAASG,KAAKG,cAAcC,iBAEvCN,QAAQC,IAAIT,GAbgB,kDAe5BL,EAAS,EAAD,IAfoB,yBAiB5BD,GAAa,GAjBe,6EAAH,qDA0B7B,OALAqB,EAAAA,EAAAA,YAAU,WACRT,MAEC,KAGD,iCACE,mBACEU,KAAK,SACLC,QAAS,kBAAMb,GAAU,IACzBc,UAAWC,EAHb,qBAOC1B,IAAa,SAAC2B,EAAA,EAAD,CAAQJ,KAAK,SAASK,MAAM,aAC1C,gBACEC,IAAG,uDACkC1B,EAAa2B,YAD/C,cAGHC,IAAK5B,EAAa6B,eAClBP,UAAWC,KAEb,4BACE,0BACGvB,EAAa6B,eADhB,IACiCzB,EADjC,QAGA,wCAA4C,GAA5BJ,EAAa8B,aAA7B,QACA,sCACA,uBAAI9B,EAAa+B,YACjB,mCACC7B,EAAY8B,KAAI,SAAAC,GAAK,OACpB,uBAAmBA,EAAMC,MAAjBD,EAAME,WAGlB,mBACA,4BACE,oDACA,2BACE,eAAeb,UAAWC,EAA1B,UACE,SAAC,KAAD,CAAMa,GAAE,kBAAa9B,EAAb,SAA6BgB,UAAWC,EAAhD,mBADM,SAKR,eAAkBD,UAAWC,EAA7B,UACE,SAAC,KAAD,CACEa,GAAE,kBAAa9B,EAAb,YACFgB,UAAWC,EAFb,sBADM,eASV,SAAC,KAAD","sources":["api/client.js","webpack://react-homework-template/./src/styles/MovieDetailsPage.module.css?fb02","components/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const finderInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieDetailsPage_btn\":\"MovieDetailsPage_MovieDetailsPage_btn__VoteG\",\"MovieDetailsPage_poster\":\"MovieDetailsPage_MovieDetailsPage_poster__XwQqZ\",\"Cast_list\":\"MovieDetailsPage_Cast_list__kAzuh\"};","import { useState, useEffect } from 'react';\nimport { finderInstance } from 'api/client';\nimport { useParams, Outlet, Link, useNavigate } from 'react-router-dom';\nimport { Loader } from 'components/Loader';\nimport styles from '../styles/MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  // eslint-disable-next-line\n  const [error, setError] = useState(null);\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [movieGenres, setMovieGenres] = useState([]);\n  const [movieYear, setMovieYear] = useState('');\n  const { movieId } = useParams();\n\n  let navigate = useNavigate();\n\n  const getMovieDetailsResponse = async () => {\n    setIsLoading(true);\n    // console.log(this.state.lookingValue);\n    try {\n      const response = await finderInstance.get(\n        `movie/${movieId}?api_key=3bf6ab2d930f009ec312eecba4ae9f94&language=en-US`\n      );\n      console.log(response);\n      setMovieDetails(response.data);\n      setMovieGenres(response.data.genres);\n      setMovieYear(() => {\n        new Date(response.data.release_date).getFullYear();\n      });\n      console.log(movieYear);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getMovieDetailsResponse();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => navigate(-1)}\n        className={styles.MovieDetailsPage_btn}\n      >\n        Go back\n      </button>\n      {isLoading && <Loader type=\"spokes\" color=\"#3f72b5\" />}\n      <img\n        src={`\n            https://image.tmdb.org/t/p/w300${movieDetails.poster_path}\n        `}\n        alt={movieDetails.original_title}\n        className={styles.MovieDetailsPage_poster}\n      ></img>\n      <div>\n        <h1>\n          {movieDetails.original_title}({movieYear})\n        </h1>\n        <p>User score: {movieDetails.vote_average * 10}%</p>\n        <h2>Overview</h2>\n        <p>{movieDetails.overview}</p>\n        <h3>Genres</h3>\n        {movieGenres.map(genre => (\n          <p key={genre.id}>{genre.name}</p>\n        ))}\n      </div>\n      <hr></hr>\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li key=\"cast\" className={styles.Cast_list}>\n            <Link to={`/movies/${movieId}/cast`} className={styles.Cast_list}>\n              Cast\n            </Link>\n          </li>\n          <li key=\"reviews\" className={styles.Cast_list}>\n            <Link\n              to={`/movies/${movieId}/reviews`}\n              className={styles.Cast_list}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;"],"names":["finderInstance","axios","baseURL","useState","isLoading","setIsLoading","setError","movieDetails","setMovieDetails","movieGenres","setMovieGenres","movieYear","setMovieYear","movieId","useParams","navigate","useNavigate","getMovieDetailsResponse","response","console","log","data","genres","Date","release_date","getFullYear","useEffect","type","onClick","className","styles","Loader","color","src","poster_path","alt","original_title","vote_average","overview","map","genre","name","id","to"],"sourceRoot":""}