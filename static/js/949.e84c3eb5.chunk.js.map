{"version":3,"file":"static/js/949.e84c3eb5.chunk.js","mappings":"qLAEaA,E,MAAiBC,GAAAA,OAAa,CACzCC,QAAS,mC,qJCFX,EAAiC,mCAAjC,EAAwF,sCAAxF,EAAgJ,oC,SCsFhJ,EAhFmB,WACjB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAcO,GAAd,WAOMC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAMC,iBACNJ,GAAa,GAFM,kBAKMT,EAAAA,EAAAA,IAAA,qFACyDI,EADzD,gCALN,OAKXU,EALW,OAQjBC,QAAQC,IAAIF,GACZP,EAAiBO,EAASG,KAAKC,SATd,kDAWjBR,EAAS,EAAD,IAXS,yBAajBD,GAAa,GAbI,6EAAH,sDA8BlB,OAbAU,EAAAA,EAAAA,YAAU,YCpCsB,SAACC,EAAKC,GACtC,IACE,IAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,GAC1B,MAAOK,GACPZ,QAAQY,MAAM,oBAAqBA,EAAMC,UDgCzCC,CAAmB,gBAAiBvB,KACnC,CAACA,KAEJa,EAAAA,EAAAA,YAAU,WACR,IAAMW,EChC0B,SAAAV,GAClC,IACE,IAAME,EAAkBG,aAAaM,QAAQX,GAC7C,OAA2B,OAApBE,OAA2BU,EAAYT,KAAKU,MAAMX,GACzD,MAAOK,GACPZ,QAAQY,MAAM,oBAAqBA,EAAMC,UD2BpBM,CAAqB,iBACtCJ,IACFvB,EAAiBD,GACjBS,QAAQC,IAAI,UAGb,KAGD,iCACE,mBAAQmB,UAAW,GAAnB,UACE,kBAAMA,UAAW,GAAIC,SAAUzB,EAA/B,WACE,mBAAQ0B,KAAK,SAASF,UAAWG,EAAjC,UACE,iBAAMH,UAAW,GAAjB,uBAGF,kBACEd,MAAOjB,EACPmC,SA7CW,SAAA3B,GACnBA,EAAMC,iBACNR,EAAgBO,EAAM4B,OAAOnB,QA4CrBc,UAAWG,EACXD,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,uBAIjBrC,EAAcsC,OAAS,IACtB,wBACGtC,EAAcuC,KAAI,SAAAC,GAAY,OAC7B,eAAIX,UAAWG,EAAf,UACE,SAAC,KAAD,CACES,GAAE,kBAAaD,EAAaE,IAC5Bb,UAAWG,EAFb,SAIGQ,EAAaG,kBAL0BH,EAAaE,SAW9DxC,IAAa,SAAC0C,EAAA,EAAD,CAAQb,KAAK,SAASc,MAAM","sources":["api/client.js","webpack://react-homework-template/./src/styles/MoviesPage.module.css?6227","components/MoviesPage.jsx","api/localStorage.js"],"sourcesContent":["import axios from 'axios';\n\nexport const finderInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"MoviesPage_btn\":\"MoviesPage_MoviesPage_btn__vpZs1\",\"MoviesPage_search\":\"MoviesPage_MoviesPage_search__eME0O\",\"MoviesPage_list\":\"MoviesPage_MoviesPage_list__Z5qsz\"};","import { useState, useEffect } from 'react';\nimport { finderInstance } from 'api/client';\nimport { Link } from 'react-router-dom';\nimport { saveInLocalStorage, loadFromLocalStorage } from 'api/localStorage';\nimport { Loader } from 'components/Loader';\nimport styles from '../styles/MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [lookingValue, setLookingValue] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // eslint-disable-next-line\n  const [error, setError] = useState(null);\n\n  const handleChange = event => {\n    event.preventDefault();\n    setLookingValue(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const response = await finderInstance.get(\n        `search/movie?api_key=3bf6ab2d930f009ec312eecba4ae9f94&language=en-US&query=${lookingValue}&page=1&include_adult=false`\n      );\n      console.log(response);\n      setSearchResults(response.data.results);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    saveInLocalStorage('searchResults', searchResults);\n  }, [searchResults]);\n\n  useEffect(() => {\n    const storageArray = loadFromLocalStorage('searchResults');\n    if (storageArray) {\n      setSearchResults(searchResults);\n      console.log('aaa');\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <header className={''}>\n        <form className={''} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={styles.MoviesPage_btn}>\n            <span className={''}>Search</span>\n          </button>\n\n          <input\n            value={lookingValue}\n            onChange={handleChange}\n            className={styles.MoviesPage_search}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n        </form>\n      </header>\n      {searchResults.length > 0 && (\n        <ul>\n          {searchResults.map(searchResult => (\n            <li className={styles.MoviesPage_list} key={searchResult.id}>\n              <Link\n                to={`/movies/${searchResult.id}`}\n                className={styles.MoviesPage_list}\n              >\n                {searchResult.original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      {isLoading && <Loader type=\"spokes\" color=\"#3f72b5\" />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","export const saveInLocalStorage = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nexport const loadFromLocalStorage = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n"],"names":["finderInstance","axios","baseURL","useState","lookingValue","setLookingValue","searchResults","setSearchResults","isLoading","setIsLoading","setError","handleSubmit","event","preventDefault","response","console","log","data","results","useEffect","key","value","serializedState","JSON","stringify","localStorage","setItem","error","message","saveInLocalStorage","storageArray","getItem","undefined","parse","loadFromLocalStorage","className","onSubmit","type","styles","onChange","target","autoComplete","autoFocus","placeholder","length","map","searchResult","to","id","original_title","Loader","color"],"sourceRoot":""}