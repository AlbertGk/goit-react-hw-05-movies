{"version":3,"file":"static/js/250.78f0eaa5.chunk.js","mappings":"qLAEaA,E,MAAiBC,GAAAA,OAAa,CACzCC,QAAS,mC,2ICFX,G,QAAiC,8BAAjC,EAA0E,wB,SCuD1E,EAjDc,WAEX,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAkBC,GAAlB,WAEA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAcE,GAAd,WACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAsB,mCAAG,2FAC7BN,GAAa,GADgB,kBAGJJ,EAAAA,EAAAA,IAAA,gBACZQ,EADY,qEAHI,OAGrBG,EAHqB,OAM3BC,QAAQC,IAAIF,GACZJ,EAAeI,EAASG,KAAKC,MAPF,gDAS3BV,EAAS,EAAD,IATmB,yBAW3BD,GAAa,GAXc,4EAAH,qDAoB5B,OALAY,EAAAA,EAAAA,YAAU,WACRN,MAEC,KAGD,+BACE,eAAIO,UAAWC,EAAf,SACGZ,EAAYa,KAAI,SAAAC,GAAU,OACzB,gBAAIH,UAAWC,EAAf,WACE,gBACEG,IAAG,yCAAoCD,EAAWE,cAClDC,IAAKH,EAAWI,QAElB,4BACE,kCAAUJ,EAAWI,SACrB,uCAAeJ,EAAWK,kBAPQL,EAAWM","sources":["api/client.js","webpack://react-homework-template/./src/styles/Cast.module.css?8ce4","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const finderInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"Cast_container\":\"Cast_Cast_container__FHezo\",\"Cast_elem\":\"Cast_Cast_elem__fXhVH\"};","import { useState, useEffect } from 'react';\nimport { finderInstance } from 'api/client';\nimport { useParams } from 'react-router-dom';\n// eslint-disable-next-line\nimport { Loader } from 'components/Loader';\nimport styles from '../styles/Cast.module.css';\n\n const Cast = () => {\n   // eslint-disable-next-line\n   const [isLoading, setIsLoading] = useState(false);\n   // eslint-disable-next-line\n   const [error, setError] = useState(null);\n   const [castDetails, setCastDetails] = useState([]);\n   const { movieId } = useParams();\n\n   const getCastDetailsResponse = async () => {\n     setIsLoading(true);\n     try {\n       const response = await finderInstance.get(\n         `movie/${movieId}/credits?api_key=3bf6ab2d930f009ec312eecba4ae9f94&language=en-US`\n       );\n       console.log(response);\n       setCastDetails(response.data.cast);\n     } catch (error) {\n       setError(error);\n     } finally {\n       setIsLoading(false);\n     }\n   };\n\n   useEffect(() => {\n     getCastDetailsResponse();\n     // eslint-disable-next-line\n   }, []);\n\n   return (\n     <>\n       <ul className={styles.Cast_container}>\n         {castDetails.map(castDetail => (\n           <li className={styles.Cast_elem} key={castDetail.credit_id}>\n             <img\n               src={`https://image.tmdb.org/t/p/w200${castDetail.profile_path}`}\n               alt={castDetail.name}\n             />\n             <div>\n               <p>Name: {castDetail.name}</p>\n               <p>Character: {castDetail.character}</p>\n             </div>\n           </li>\n         ))}\n       </ul>\n       {/* {isLoading && <Loader type=\"spokes\" color=\"#3f72b5\" />} */}\n     </>\n   );\n };\n\nexport default Cast;"],"names":["finderInstance","axios","baseURL","useState","setIsLoading","setError","castDetails","setCastDetails","movieId","useParams","getCastDetailsResponse","response","console","log","data","cast","useEffect","className","styles","map","castDetail","src","profile_path","alt","name","character","credit_id"],"sourceRoot":""}